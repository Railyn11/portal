<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Student Portal</title>
  <style>
    :root {
      --bg-color: #f5f5f5;
      --card-bg: #ffffff;
      --text-color: #333333;
      --accent-color: #4a90e2;
      --accent-2: #88bde6;
    }
    [data-theme="dark"] {
      --bg-color: #1e1e1e;
      --card-bg: #2c2c2c;
      --text-color: #f0f0f0;
      --accent-color: #4a90e2;
      --accent-2: #72aee6;
    }
    [data-theme="cool"] {
      --bg-color: #e8f4f8;
      --card-bg: #ffffff;
      --text-color: #1a1a1a;
      --accent-color: #009688;
      --accent-2: #4db6ac;
    }

    * {
      box-sizing: border-box;
    }
    body {
      margin: 0;
      padding: 0;
      font-family: Arial, sans-serif;
      background-color: var(--bg-color);
      color: var(--text-color);
    }

    .container {
      max-width: 400px;
      margin: 90px auto;
      padding: 20px;
    }

    .portal-container {
      width: 100vw;
      height: 100vh;
      padding: 20px;
      margin: 0;
      overflow-y: auto;
    }

    .card {
      background-color: var(--card-bg);
      padding: 20px;
      border-radius: 8px;
      margin-bottom: 20px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      width: 100%;
    }

    h2, h3 {
      margin-top: 0;
    }
    input, select {
      width: 100%;
      padding: 10px;
      margin: 8px 0 16px 0;
      border: 1px solid #ccc;
      border-radius: 4px;
      font-size: 16px;
    }
    button {
      padding: 10px 16px;
      font-size: 16px;
      background-color: var(--accent-color);
      border: none;
      color: white;
      border-radius: 4px;
      cursor: pointer;
    }
    button:hover {
      background-color: var(--accent-2);
    }
    .toggle-link {
      color: var(--accent-color);
      cursor: pointer;
    }
    .hidden {
      display: none;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 10px;
    }
    th, td {
      padding: 8px 12px;
      border: 1px solid #ccc;
      text-align: center;
    }
    th {
      background-color: var(--accent-color);
      color: white;
    }

    .theme-switcher {
      float: right;
    }
    .theme-switcher select {
      width: auto;
    }
    [data-theme="dark"] input,
    [data-theme="dark"] select,
    [data-theme="dark"] textarea {
      background-color: #3a3a3a;
      color: #f0f0f0;
      border: 1px solid #666;
    }

    [data-theme="dark"] table {
      border-color: #555;
    }

    [data-theme="dark"] th, 
    [data-theme="dark"] td {
      border-color: #444;
      background-color: #2c2c2c;
      color: #f0f0f0;
    }

    [data-theme="dark"] th {
      background-color: #4a90e2;
      color: white;
    }

    [data-theme="dark"] .card {
      background-color: #2c2c2c;
      color: #f0f0f0;
    }
  </style>
</head>
<body>

  <!-- LOGIN VIEW -->
  <div class="container" id="login-view">
    <div class="card">
      <h2>Student Login</h2>
      <input type="text" id="login-studentid" placeholder="Student ID" readonly onfocus="this.removeAttribute('readonly')" />
      <input type="password" id="login-password" placeholder="Password" />
      <button onclick="login()">Login</button>
      <p>Don't have an account? <span class="toggle-link" onclick="showSignup()">Sign up here</span></p>
    </div>
  </div>

  <!-- SIGNUP VIEW -->
  <div class="container hidden" id="signup-view">
    <div class="card">
      <h2>Student Sign Up</h2>
      <input type="text" id="signup-studentid" placeholder="Student ID (unique)" />
      <input type="text" id="signup-fullname" placeholder="Full Name" />
      <input type="email" id="signup-email" placeholder="Email" />
      <input type="password" id="signup-password" placeholder="Password" />
      <button onclick="signup()">Sign Up</button>
      <p>Already have an account? <span class="toggle-link" onclick="showLogin()">Login here</span></p>
    </div>
  </div>

  <!-- PORTAL VIEW -->
  <div class="portal-container hidden" id="portal-view" data-theme="light">
    <div class="theme-switcher">
      <label>Theme: 
        <select id="theme-select" onchange="changeTheme()">
          <option value="light">Light</option>
          <option value="cool">Cool</option>
          <option value="dark">Dark</option>
        </select>
      </label>
    </div>

    <div class="card">
      <h2>Welcome, <span id="portal-name"></span> (ID: <span id="portal-id"></span>)</h2>
      <button onclick="logout()">Logout</button>
    </div>

    <div class="card">
      <h3>Tuition Fee Balance</h3>
      <p>Your current balance is: <strong id="balance-amount">₱0.00</strong></p>
    </div>

    <div class="card">
      <h3>Subject Ledger & Grades</h3>
      <table id="ledger-table">
        <thead>
          <tr>
            <th>Subject Code</th>
            <th>Subject Name</th>
            <th>Teacher</th>
            <th>Grade</th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
      <p id="overall-eval"></p>
    </div>

    <div class="card">
      <h3>Subject Events & Activities</h3>
      <table id="events-table">
        <thead>
          <tr>
            <th>Subject Code</th>
            <th>Event / Assignment</th>
            <th>Date</th>
            <th>Submitted</th>
            <th>Document Link</th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
    </div>
  </div>

  <script>
    function $(id) { return document.getElementById(id); }

    function showLogin() {
      $('signup-view').classList.add('hidden');
      $('portal-view').classList.add('hidden');
      $('login-view').classList.remove('hidden');
    }

    function showSignup() {
      $('login-view').classList.add('hidden');
      $('portal-view').classList.add('hidden');
      $('signup-view').classList.remove('hidden');
    }

    function showPortal() {
      $('login-view').classList.add('hidden');
      $('signup-view').classList.add('hidden');
      $('portal-view').classList.remove('hidden');
    }

    function signup() {
      const sid = $('signup-studentid').value.trim();
      const name = $('signup-fullname').value.trim();
      const email = $('signup-email').value.trim();
      const pwd = $('signup-password').value;

      if (!sid || !name || !email || !pwd) {
        alert("Fill out all fields.");
        return;
      }
      if (localStorage.getItem('student_' + sid)) {
        alert("Student ID already exists.");
        return;
      }

      const student = {
        studentId: sid,
        fullName: name,
        email: email,
        password: pwd,
        balance: 1500.50,
        ledger: [
          { code: "SA01", name: "Science A", teacher: "Mr. Chiong", grade: 1.50 },
          { code: "MA02", name: "Math B", teacher: "Ms. Legarda", grade: 1.00 },
          { code: "EN03", name: "English C", teacher: "Mrs. Endriga", grade: 2.00 }
        ],
        events: [
          { subjectCode: "SA01", assignment: "Lab Report", date: "2025-10-12", submitted: true, docLink: "https://example.com/labreport.pdf" },
          { subjectCode: "MA02", assignment: "Activity", date: "2025-10-15", submitted: false, docLink: "" },
          { subjectCode: "EN03", assignment: "PPT Presentation", date: "2025-10-20", submitted: false, docLink: "" }
        ]
      };
      localStorage.setItem('student_' + sid, JSON.stringify(student));
      alert("Account created. Please login.");
      showLogin();
    }

    function login() {
      const sid = $('login-studentid').value.trim();
      const pwd = $('login-password').value;

      const key = 'student_' + sid;
      const stored = localStorage.getItem(key);
      if (!stored) {
        alert("No such student ID.");
        return;
      }

      const student = JSON.parse(stored);
      if (student.password !== pwd) {
        alert("Incorrect password.");
        return;
      }

      sessionStorage.setItem('loggedInId', sid);

      showPortal();
      loadPortal(student);
    }

    function logout() {
      sessionStorage.removeItem('loggedInId');
      showLogin();
    }

    function loadPortal(student) {
      $('portal-name').innerText = student.fullName;
      $('portal-id').innerText = student.studentId;
      $('balance-amount').innerText = `₱${student.balance.toFixed(2)}`;

      // Ledger Table
      const ltbody = $('ledger-table').querySelector('tbody');
      ltbody.innerHTML = '';
      student.ledger.forEach(sub => {
        const tr = document.createElement('tr');
        tr.innerHTML = `<td>${sub.code}</td>
                        <td>${sub.name}</td>
                        <td>${sub.teacher}</td>
                        <td>${sub.grade != null ? sub.grade.toFixed(2) : '-'}</td>`;
        ltbody.appendChild(tr);
      });

      // Grade average (Assuming 1.0 is best, 5.0 worst)
      const grades = student.ledger
        .map(s => s.grade)
        .filter(g => g != null && !isNaN(g));
      const evalP = $('overall-eval');
      if (grades.length > 0) {
        const sum = grades.reduce((a, b) => a + b, 0);
        const avg = sum / grades.length;
        // Green = avg <= 1.5 (Excellent), Orange <=3.0 (Good), Red otherwise (Poor)
        let color = avg <= 1.5 ? 'green' : avg <= 3.0 ? 'orange' : 'red';
        evalP.innerHTML = `Overall average: <strong style="color:${color}">${avg.toFixed(2)}</strong>`;
      } else {
        evalP.innerText = "No graded subjects yet.";
      }

      // Events Table
      const etbody = $('events-table').querySelector('tbody');
      etbody.innerHTML = '';
      student.events.forEach(ev => {
        const tr = document.createElement('tr');
        tr.innerHTML = `<td>${ev.subjectCode}</td>
                        <td>${ev.assignment}</td>
                        <td>${ev.date}</td>
                        <td>${ev.submitted ? 'Yes' : 'No'}</td>
                        <td>${ev.submitted && ev.docLink ? `<a href="${ev.docLink}" target="_blank" rel="noopener noreferrer">View</a>` : '-'}</td>`;
        etbody.appendChild(tr);
      });

      changeTheme();
    }

    function changeTheme() {
      const sel = $('theme-select').value;
      $('portal-view').setAttribute('data-theme', sel);
    }

    window.onload = function() {
      const sid = sessionStorage.getItem('loggedInId');
      if (sid) {
        const st = localStorage.getItem('student_' + sid);
        if (st) {
          const student = JSON.parse(st);
          showPortal();
          loadPortal(student);
        } else {
          sessionStorage.removeItem('loggedInId');
          showLogin();
        }
      } else {
        showLogin();
      }
    };

    // Optional Error Logger
    window.onerror = function(msg, url, line, col, error) {
      console.warn("Error: " + msg + " at " + line + ":" + col);
    };
  </script>
</body>
</html>
